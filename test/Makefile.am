# $Id: Makefile.am 388 2022-02-11 13:23:43Z yeti-dn $
if OS_MSWIN
ms_bitfields = -mms-bitfields
endif

# NB: Rules in this file are generated by autogen.sh.  Only modify
# check_PROGRAMS when adding tests and run ./autogen.sh from the top-level
# directory.
check_PROGRAMS = \
	item_string_const_const \
	item_string_const_setcopy \
	item_string_const_setowned \
	item_string_copy_owned \
	item_string_copy_take \
	item_string_owned_owned \
	item_string_owned_setconst \
	item_char_array_const_const \
	item_char_array_const_setcopy \
	item_char_array_const_setowned \
	item_char_array_copy_owned \
	item_char_array_copy_take \
	item_char_array_owned_owned \
	item_char_array_owned_setconst \
	item_int32_array_const_const \
	item_int32_array_const_setcopy \
	item_int32_array_const_setowned \
	item_int32_array_copy_owned \
	item_int32_array_copy_take \
	item_int32_array_owned_owned \
	item_int32_array_owned_setconst \
	item_int64_array_const_const \
	item_int64_array_const_setcopy \
	item_int64_array_const_setowned \
	item_int64_array_copy_owned \
	item_int64_array_copy_take \
	item_int64_array_owned_owned \
	item_int64_array_owned_setconst \
	item_double_array_const_const \
	item_double_array_const_setcopy \
	item_double_array_const_setowned \
	item_double_array_copy_owned \
	item_double_array_copy_take \
	item_double_array_owned_owned \
	item_double_array_owned_setconst \
	item_string_array_const_const \
	item_string_array_const_setcopy \
	item_string_array_const_setowned \
	item_string_array_copy_owned \
	item_string_array_copy_take \
	item_string_array_owned_owned \
	item_string_array_owned_setconst \
	object_siunit \
	object_dataline_const \
	object_dataline_copy \
	object_dataline_owned \
	object_dataline_sizecheck \
	object_datafield_const \
	object_datafield_copy \
	object_datafield_owned \
	object_datafield_sizecheck \
	object_brick_const \
	object_brick_copy \
	object_brick_owned \
	object_brick_sizecheck \
	object_surface_const \
	object_surface_copy \
	object_surface_owned \
	object_surface_sizecheck \
	object_lawn_const \
	object_lawn_copy \
	object_lawn_owned \
	object_lawn_nodata \
	object_lawn_sizecheck \
	object_lawn_curveprops \
	object_lawn_segments \
	object_selectionaxis_const \
	object_selectionaxis_copy \
	object_selectionaxis_owned \
	object_selectioncross_const \
	object_selectioncross_copy \
	object_selectioncross_owned \
	object_selectioncross_sizecheck \
	object_selectionellipse_const \
	object_selectionellipse_copy \
	object_selectionellipse_owned \
	object_selectionellipse_sizecheck \
	object_selectionlattice_const \
	object_selectionlattice_copy \
	object_selectionlattice_owned \
	object_selectionlattice_sizecheck \
	object_selectionline_const \
	object_selectionline_copy \
	object_selectionline_owned \
	object_selectionline_sizecheck \
	object_selectionpoint_const \
	object_selectionpoint_copy \
	object_selectionpoint_owned \
	object_selectionpoint_sizecheck \
	object_selectionpath_const \
	object_selectionpath_copy \
	object_selectionpath_owned \
	object_selectionpath_sizecheck \
	object_selectionprojective_const \
	object_selectionprojective_copy \
	object_selectionprojective_owned \
	object_selectionprojective_sizecheck \
	object_selectionrectangle_const \
	object_selectionrectangle_copy \
	object_selectionrectangle_owned \
	object_selectionrectangle_sizecheck \
	object_graphcurvemodel_const \
	object_graphcurvemodel_copy \
	object_graphcurvemodel_owned \
	object_graphcurvemodel_sizecheck \
	object_graphmodel_curves \
	object_graphmodel_nocurves \
	object_extract \
	object_nth \
	object_foreach \
	object_get_item_missing \
	file_basic_types \
	file_error_magic \
	file_error_itemtype \
	file_error_confinement_object \
	file_error_confinement_name1 \
	file_error_confinement_name2 \
	file_error_confinement_array1 \
	file_error_arraysize \
	file_error_duplicatename \
	file_error_toodeepnesting \
	file_error_truncated_object \
	membuf_item_bool \
	membuf_item_char \
	membuf_item_int32 \
	membuf_item_int64 \
	membuf_item_double \
	membuf_item_string \
	membuf_item_char_array \
	membuf_item_int32_array \
	membuf_item_int64_array \
	membuf_item_double_array \
	membuf_item_string_array \
	membuf_item_object \
	membuf_object \
	membuf_item_bool_read_too_short \
	membuf_item_char_read_too_short \
	membuf_item_int32_read_too_short \
	membuf_item_int64_read_too_short \
	membuf_item_double_read_too_short \
	membuf_item_string_read_too_short \
	membuf_item_int32_array_read_too_short \
	membuf_item_int64_array_read_too_short \
	membuf_item_double_array_read_too_short \
	membuf_item_string_array_read_too_short \
	membuf_object_read_too_short \
	membuf_object_write_too_short \
	object_copy_all \
	object_copy_none \
	object_copy_if_owned \
	check_utf8_name \
	check_utf8_type \
	check_utf8_string \
	check_double_nan \
	check_double_inf \
	check_empty_name \
	check_identifier_type

TESTS = $(check_PROGRAMS) $(valgrind_tests)
CLEANFILES = $(valgrind_tests)
AM_CFLAGS = $(ms_bitfields) $(WARNING_CFLAGS)
AM_LDFLAGS = ../lib/libgwyfile.la -lm

# @@@ SOURCES BEGIN @@@
item_string_const_const_SOURCES = item_string_const_const.c common.h
item_string_const_setcopy_SOURCES = item_string_const_setcopy.c common.h
item_string_const_setowned_SOURCES = item_string_const_setowned.c common.h
item_string_copy_owned_SOURCES = item_string_copy_owned.c common.h
item_string_copy_take_SOURCES = item_string_copy_take.c common.h
item_string_owned_owned_SOURCES = item_string_owned_owned.c common.h
item_string_owned_setconst_SOURCES = item_string_owned_setconst.c common.h
item_char_array_const_const_SOURCES = item_char_array_const_const.c common.h
item_char_array_const_setcopy_SOURCES = item_char_array_const_setcopy.c common.h
item_char_array_const_setowned_SOURCES = item_char_array_const_setowned.c common.h
item_char_array_copy_owned_SOURCES = item_char_array_copy_owned.c common.h
item_char_array_copy_take_SOURCES = item_char_array_copy_take.c common.h
item_char_array_owned_owned_SOURCES = item_char_array_owned_owned.c common.h
item_char_array_owned_setconst_SOURCES = item_char_array_owned_setconst.c common.h
item_int32_array_const_const_SOURCES = item_int32_array_const_const.c common.h
item_int32_array_const_setcopy_SOURCES = item_int32_array_const_setcopy.c common.h
item_int32_array_const_setowned_SOURCES = item_int32_array_const_setowned.c common.h
item_int32_array_copy_owned_SOURCES = item_int32_array_copy_owned.c common.h
item_int32_array_copy_take_SOURCES = item_int32_array_copy_take.c common.h
item_int32_array_owned_owned_SOURCES = item_int32_array_owned_owned.c common.h
item_int32_array_owned_setconst_SOURCES = item_int32_array_owned_setconst.c common.h
item_int64_array_const_const_SOURCES = item_int64_array_const_const.c common.h
item_int64_array_const_setcopy_SOURCES = item_int64_array_const_setcopy.c common.h
item_int64_array_const_setowned_SOURCES = item_int64_array_const_setowned.c common.h
item_int64_array_copy_owned_SOURCES = item_int64_array_copy_owned.c common.h
item_int64_array_copy_take_SOURCES = item_int64_array_copy_take.c common.h
item_int64_array_owned_owned_SOURCES = item_int64_array_owned_owned.c common.h
item_int64_array_owned_setconst_SOURCES = item_int64_array_owned_setconst.c common.h
item_double_array_const_const_SOURCES = item_double_array_const_const.c common.h
item_double_array_const_setcopy_SOURCES = item_double_array_const_setcopy.c common.h
item_double_array_const_setowned_SOURCES = item_double_array_const_setowned.c common.h
item_double_array_copy_owned_SOURCES = item_double_array_copy_owned.c common.h
item_double_array_copy_take_SOURCES = item_double_array_copy_take.c common.h
item_double_array_owned_owned_SOURCES = item_double_array_owned_owned.c common.h
item_double_array_owned_setconst_SOURCES = item_double_array_owned_setconst.c common.h
item_string_array_const_const_SOURCES = item_string_array_const_const.c common.h
item_string_array_const_setcopy_SOURCES = item_string_array_const_setcopy.c common.h
item_string_array_const_setowned_SOURCES = item_string_array_const_setowned.c common.h
item_string_array_copy_owned_SOURCES = item_string_array_copy_owned.c common.h
item_string_array_copy_take_SOURCES = item_string_array_copy_take.c common.h
item_string_array_owned_owned_SOURCES = item_string_array_owned_owned.c common.h
item_string_array_owned_setconst_SOURCES = item_string_array_owned_setconst.c common.h
object_siunit_SOURCES = object_siunit.c common.h
object_dataline_const_SOURCES = object_dataline_const.c common.h
object_dataline_copy_SOURCES = object_dataline_copy.c common.h
object_dataline_owned_SOURCES = object_dataline_owned.c common.h
object_dataline_sizecheck_SOURCES = object_dataline_sizecheck.c common.h
object_datafield_const_SOURCES = object_datafield_const.c common.h
object_datafield_copy_SOURCES = object_datafield_copy.c common.h
object_datafield_owned_SOURCES = object_datafield_owned.c common.h
object_datafield_sizecheck_SOURCES = object_datafield_sizecheck.c common.h
object_brick_const_SOURCES = object_brick_const.c common.h
object_brick_copy_SOURCES = object_brick_copy.c common.h
object_brick_owned_SOURCES = object_brick_owned.c common.h
object_brick_sizecheck_SOURCES = object_brick_sizecheck.c common.h
object_surface_const_SOURCES = object_surface_const.c common.h
object_surface_copy_SOURCES = object_surface_copy.c common.h
object_surface_owned_SOURCES = object_surface_owned.c common.h
object_surface_sizecheck_SOURCES = object_surface_sizecheck.c common.h
object_lawn_const_SOURCES = object_lawn_const.c common.h
object_lawn_copy_SOURCES = object_lawn_copy.c common.h
object_lawn_owned_SOURCES = object_lawn_owned.c common.h
object_lawn_nodata_SOURCES = object_lawn_nodata.c common.h
object_lawn_sizecheck_SOURCES = object_lawn_sizecheck.c common.h
object_lawn_curveprops_SOURCES = object_lawn_curveprops.c common.h
object_lawn_segments_SOURCES = object_lawn_segments.c common.h
object_selectionaxis_const_SOURCES = object_selectionaxis_const.c common.h
object_selectionaxis_copy_SOURCES = object_selectionaxis_copy.c common.h
object_selectionaxis_owned_SOURCES = object_selectionaxis_owned.c common.h
object_selectioncross_const_SOURCES = object_selectioncross_const.c common.h
object_selectioncross_copy_SOURCES = object_selectioncross_copy.c common.h
object_selectioncross_owned_SOURCES = object_selectioncross_owned.c common.h
object_selectioncross_sizecheck_SOURCES = object_selectioncross_sizecheck.c common.h
object_selectionellipse_const_SOURCES = object_selectionellipse_const.c common.h
object_selectionellipse_copy_SOURCES = object_selectionellipse_copy.c common.h
object_selectionellipse_owned_SOURCES = object_selectionellipse_owned.c common.h
object_selectionellipse_sizecheck_SOURCES = object_selectionellipse_sizecheck.c common.h
object_selectionlattice_const_SOURCES = object_selectionlattice_const.c common.h
object_selectionlattice_copy_SOURCES = object_selectionlattice_copy.c common.h
object_selectionlattice_owned_SOURCES = object_selectionlattice_owned.c common.h
object_selectionlattice_sizecheck_SOURCES = object_selectionlattice_sizecheck.c common.h
object_selectionline_const_SOURCES = object_selectionline_const.c common.h
object_selectionline_copy_SOURCES = object_selectionline_copy.c common.h
object_selectionline_owned_SOURCES = object_selectionline_owned.c common.h
object_selectionline_sizecheck_SOURCES = object_selectionline_sizecheck.c common.h
object_selectionpoint_const_SOURCES = object_selectionpoint_const.c common.h
object_selectionpoint_copy_SOURCES = object_selectionpoint_copy.c common.h
object_selectionpoint_owned_SOURCES = object_selectionpoint_owned.c common.h
object_selectionpoint_sizecheck_SOURCES = object_selectionpoint_sizecheck.c common.h
object_selectionpath_const_SOURCES = object_selectionpath_const.c common.h
object_selectionpath_copy_SOURCES = object_selectionpath_copy.c common.h
object_selectionpath_owned_SOURCES = object_selectionpath_owned.c common.h
object_selectionpath_sizecheck_SOURCES = object_selectionpath_sizecheck.c common.h
object_selectionprojective_const_SOURCES = object_selectionprojective_const.c common.h
object_selectionprojective_copy_SOURCES = object_selectionprojective_copy.c common.h
object_selectionprojective_owned_SOURCES = object_selectionprojective_owned.c common.h
object_selectionprojective_sizecheck_SOURCES = object_selectionprojective_sizecheck.c common.h
object_selectionrectangle_const_SOURCES = object_selectionrectangle_const.c common.h
object_selectionrectangle_copy_SOURCES = object_selectionrectangle_copy.c common.h
object_selectionrectangle_owned_SOURCES = object_selectionrectangle_owned.c common.h
object_selectionrectangle_sizecheck_SOURCES = object_selectionrectangle_sizecheck.c common.h
object_graphcurvemodel_const_SOURCES = object_graphcurvemodel_const.c common.h
object_graphcurvemodel_copy_SOURCES = object_graphcurvemodel_copy.c common.h
object_graphcurvemodel_owned_SOURCES = object_graphcurvemodel_owned.c common.h
object_graphcurvemodel_sizecheck_SOURCES = object_graphcurvemodel_sizecheck.c common.h
object_graphmodel_curves_SOURCES = object_graphmodel_curves.c common.h
object_graphmodel_nocurves_SOURCES = object_graphmodel_nocurves.c common.h
object_extract_SOURCES = object_extract.c common.h
object_nth_SOURCES = object_nth.c common.h
object_foreach_SOURCES = object_foreach.c common.h
object_get_item_missing_SOURCES = object_get_item_missing.c common.h
file_basic_types_SOURCES = file_basic_types.c common.h
file_error_magic_SOURCES = file_error_magic.c common.h
file_error_itemtype_SOURCES = file_error_itemtype.c common.h
file_error_confinement_object_SOURCES = file_error_confinement_object.c common.h
file_error_confinement_name1_SOURCES = file_error_confinement_name1.c common.h
file_error_confinement_name2_SOURCES = file_error_confinement_name2.c common.h
file_error_confinement_array1_SOURCES = file_error_confinement_array1.c common.h
file_error_arraysize_SOURCES = file_error_arraysize.c common.h
file_error_duplicatename_SOURCES = file_error_duplicatename.c common.h
file_error_toodeepnesting_SOURCES = file_error_toodeepnesting.c common.h
file_error_truncated_object_SOURCES = file_error_truncated_object.c common.h
membuf_item_bool_SOURCES = membuf_item_bool.c common.h
membuf_item_char_SOURCES = membuf_item_char.c common.h
membuf_item_int32_SOURCES = membuf_item_int32.c common.h
membuf_item_int64_SOURCES = membuf_item_int64.c common.h
membuf_item_double_SOURCES = membuf_item_double.c common.h
membuf_item_string_SOURCES = membuf_item_string.c common.h
membuf_item_char_array_SOURCES = membuf_item_char_array.c common.h
membuf_item_int32_array_SOURCES = membuf_item_int32_array.c common.h
membuf_item_int64_array_SOURCES = membuf_item_int64_array.c common.h
membuf_item_double_array_SOURCES = membuf_item_double_array.c common.h
membuf_item_string_array_SOURCES = membuf_item_string_array.c common.h
membuf_item_object_SOURCES = membuf_item_object.c common.h
membuf_object_SOURCES = membuf_object.c common.h
membuf_item_bool_read_too_short_SOURCES = membuf_item_bool_read_too_short.c common.h
membuf_item_char_read_too_short_SOURCES = membuf_item_char_read_too_short.c common.h
membuf_item_int32_read_too_short_SOURCES = membuf_item_int32_read_too_short.c common.h
membuf_item_int64_read_too_short_SOURCES = membuf_item_int64_read_too_short.c common.h
membuf_item_double_read_too_short_SOURCES = membuf_item_double_read_too_short.c common.h
membuf_item_string_read_too_short_SOURCES = membuf_item_string_read_too_short.c common.h
membuf_item_int32_array_read_too_short_SOURCES = membuf_item_int32_array_read_too_short.c common.h
membuf_item_int64_array_read_too_short_SOURCES = membuf_item_int64_array_read_too_short.c common.h
membuf_item_double_array_read_too_short_SOURCES = membuf_item_double_array_read_too_short.c common.h
membuf_item_string_array_read_too_short_SOURCES = membuf_item_string_array_read_too_short.c common.h
membuf_object_read_too_short_SOURCES = membuf_object_read_too_short.c common.h
membuf_object_write_too_short_SOURCES = membuf_object_write_too_short.c common.h
object_copy_all_SOURCES = object_copy_all.c common.h
object_copy_none_SOURCES = object_copy_none.c common.h
object_copy_if_owned_SOURCES = object_copy_if_owned.c common.h
check_utf8_name_SOURCES = check_utf8_name.c common.h
check_utf8_type_SOURCES = check_utf8_type.c common.h
check_utf8_string_SOURCES = check_utf8_string.c common.h
check_double_nan_SOURCES = check_double_nan.c common.h
check_double_inf_SOURCES = check_double_inf.c common.h
check_empty_name_SOURCES = check_empty_name.c common.h
check_identifier_type_SOURCES = check_identifier_type.c common.h

# @@@ SOURCES END @@@

if HAVE_VALGRIND
# @@@ VALGRIND BEGIN @@@
item_string_const_const-valgrind.sh: item_string_const_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_const_const >item_string_const_const-valgrind.sh
	$(AM_V_at)chmod 755 item_string_const_const-valgrind.sh

item_string_const_setcopy-valgrind.sh: item_string_const_setcopy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_const_setcopy >item_string_const_setcopy-valgrind.sh
	$(AM_V_at)chmod 755 item_string_const_setcopy-valgrind.sh

item_string_const_setowned-valgrind.sh: item_string_const_setowned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_const_setowned >item_string_const_setowned-valgrind.sh
	$(AM_V_at)chmod 755 item_string_const_setowned-valgrind.sh

item_string_copy_owned-valgrind.sh: item_string_copy_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_copy_owned >item_string_copy_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_string_copy_owned-valgrind.sh

item_string_copy_take-valgrind.sh: item_string_copy_take$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_copy_take >item_string_copy_take-valgrind.sh
	$(AM_V_at)chmod 755 item_string_copy_take-valgrind.sh

item_string_owned_owned-valgrind.sh: item_string_owned_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_owned_owned >item_string_owned_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_string_owned_owned-valgrind.sh

item_string_owned_setconst-valgrind.sh: item_string_owned_setconst$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_owned_setconst >item_string_owned_setconst-valgrind.sh
	$(AM_V_at)chmod 755 item_string_owned_setconst-valgrind.sh

item_char_array_const_const-valgrind.sh: item_char_array_const_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_char_array_const_const >item_char_array_const_const-valgrind.sh
	$(AM_V_at)chmod 755 item_char_array_const_const-valgrind.sh

item_char_array_const_setcopy-valgrind.sh: item_char_array_const_setcopy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_char_array_const_setcopy >item_char_array_const_setcopy-valgrind.sh
	$(AM_V_at)chmod 755 item_char_array_const_setcopy-valgrind.sh

item_char_array_const_setowned-valgrind.sh: item_char_array_const_setowned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_char_array_const_setowned >item_char_array_const_setowned-valgrind.sh
	$(AM_V_at)chmod 755 item_char_array_const_setowned-valgrind.sh

item_char_array_copy_owned-valgrind.sh: item_char_array_copy_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_char_array_copy_owned >item_char_array_copy_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_char_array_copy_owned-valgrind.sh

item_char_array_copy_take-valgrind.sh: item_char_array_copy_take$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_char_array_copy_take >item_char_array_copy_take-valgrind.sh
	$(AM_V_at)chmod 755 item_char_array_copy_take-valgrind.sh

item_char_array_owned_owned-valgrind.sh: item_char_array_owned_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_char_array_owned_owned >item_char_array_owned_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_char_array_owned_owned-valgrind.sh

item_char_array_owned_setconst-valgrind.sh: item_char_array_owned_setconst$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_char_array_owned_setconst >item_char_array_owned_setconst-valgrind.sh
	$(AM_V_at)chmod 755 item_char_array_owned_setconst-valgrind.sh

item_int32_array_const_const-valgrind.sh: item_int32_array_const_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int32_array_const_const >item_int32_array_const_const-valgrind.sh
	$(AM_V_at)chmod 755 item_int32_array_const_const-valgrind.sh

item_int32_array_const_setcopy-valgrind.sh: item_int32_array_const_setcopy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int32_array_const_setcopy >item_int32_array_const_setcopy-valgrind.sh
	$(AM_V_at)chmod 755 item_int32_array_const_setcopy-valgrind.sh

item_int32_array_const_setowned-valgrind.sh: item_int32_array_const_setowned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int32_array_const_setowned >item_int32_array_const_setowned-valgrind.sh
	$(AM_V_at)chmod 755 item_int32_array_const_setowned-valgrind.sh

item_int32_array_copy_owned-valgrind.sh: item_int32_array_copy_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int32_array_copy_owned >item_int32_array_copy_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_int32_array_copy_owned-valgrind.sh

item_int32_array_copy_take-valgrind.sh: item_int32_array_copy_take$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int32_array_copy_take >item_int32_array_copy_take-valgrind.sh
	$(AM_V_at)chmod 755 item_int32_array_copy_take-valgrind.sh

item_int32_array_owned_owned-valgrind.sh: item_int32_array_owned_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int32_array_owned_owned >item_int32_array_owned_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_int32_array_owned_owned-valgrind.sh

item_int32_array_owned_setconst-valgrind.sh: item_int32_array_owned_setconst$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int32_array_owned_setconst >item_int32_array_owned_setconst-valgrind.sh
	$(AM_V_at)chmod 755 item_int32_array_owned_setconst-valgrind.sh

item_int64_array_const_const-valgrind.sh: item_int64_array_const_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int64_array_const_const >item_int64_array_const_const-valgrind.sh
	$(AM_V_at)chmod 755 item_int64_array_const_const-valgrind.sh

item_int64_array_const_setcopy-valgrind.sh: item_int64_array_const_setcopy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int64_array_const_setcopy >item_int64_array_const_setcopy-valgrind.sh
	$(AM_V_at)chmod 755 item_int64_array_const_setcopy-valgrind.sh

item_int64_array_const_setowned-valgrind.sh: item_int64_array_const_setowned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int64_array_const_setowned >item_int64_array_const_setowned-valgrind.sh
	$(AM_V_at)chmod 755 item_int64_array_const_setowned-valgrind.sh

item_int64_array_copy_owned-valgrind.sh: item_int64_array_copy_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int64_array_copy_owned >item_int64_array_copy_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_int64_array_copy_owned-valgrind.sh

item_int64_array_copy_take-valgrind.sh: item_int64_array_copy_take$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int64_array_copy_take >item_int64_array_copy_take-valgrind.sh
	$(AM_V_at)chmod 755 item_int64_array_copy_take-valgrind.sh

item_int64_array_owned_owned-valgrind.sh: item_int64_array_owned_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int64_array_owned_owned >item_int64_array_owned_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_int64_array_owned_owned-valgrind.sh

item_int64_array_owned_setconst-valgrind.sh: item_int64_array_owned_setconst$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_int64_array_owned_setconst >item_int64_array_owned_setconst-valgrind.sh
	$(AM_V_at)chmod 755 item_int64_array_owned_setconst-valgrind.sh

item_double_array_const_const-valgrind.sh: item_double_array_const_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_double_array_const_const >item_double_array_const_const-valgrind.sh
	$(AM_V_at)chmod 755 item_double_array_const_const-valgrind.sh

item_double_array_const_setcopy-valgrind.sh: item_double_array_const_setcopy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_double_array_const_setcopy >item_double_array_const_setcopy-valgrind.sh
	$(AM_V_at)chmod 755 item_double_array_const_setcopy-valgrind.sh

item_double_array_const_setowned-valgrind.sh: item_double_array_const_setowned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_double_array_const_setowned >item_double_array_const_setowned-valgrind.sh
	$(AM_V_at)chmod 755 item_double_array_const_setowned-valgrind.sh

item_double_array_copy_owned-valgrind.sh: item_double_array_copy_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_double_array_copy_owned >item_double_array_copy_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_double_array_copy_owned-valgrind.sh

item_double_array_copy_take-valgrind.sh: item_double_array_copy_take$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_double_array_copy_take >item_double_array_copy_take-valgrind.sh
	$(AM_V_at)chmod 755 item_double_array_copy_take-valgrind.sh

item_double_array_owned_owned-valgrind.sh: item_double_array_owned_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_double_array_owned_owned >item_double_array_owned_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_double_array_owned_owned-valgrind.sh

item_double_array_owned_setconst-valgrind.sh: item_double_array_owned_setconst$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_double_array_owned_setconst >item_double_array_owned_setconst-valgrind.sh
	$(AM_V_at)chmod 755 item_double_array_owned_setconst-valgrind.sh

item_string_array_const_const-valgrind.sh: item_string_array_const_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_array_const_const >item_string_array_const_const-valgrind.sh
	$(AM_V_at)chmod 755 item_string_array_const_const-valgrind.sh

item_string_array_const_setcopy-valgrind.sh: item_string_array_const_setcopy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_array_const_setcopy >item_string_array_const_setcopy-valgrind.sh
	$(AM_V_at)chmod 755 item_string_array_const_setcopy-valgrind.sh

item_string_array_const_setowned-valgrind.sh: item_string_array_const_setowned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_array_const_setowned >item_string_array_const_setowned-valgrind.sh
	$(AM_V_at)chmod 755 item_string_array_const_setowned-valgrind.sh

item_string_array_copy_owned-valgrind.sh: item_string_array_copy_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_array_copy_owned >item_string_array_copy_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_string_array_copy_owned-valgrind.sh

item_string_array_copy_take-valgrind.sh: item_string_array_copy_take$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_array_copy_take >item_string_array_copy_take-valgrind.sh
	$(AM_V_at)chmod 755 item_string_array_copy_take-valgrind.sh

item_string_array_owned_owned-valgrind.sh: item_string_array_owned_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_array_owned_owned >item_string_array_owned_owned-valgrind.sh
	$(AM_V_at)chmod 755 item_string_array_owned_owned-valgrind.sh

item_string_array_owned_setconst-valgrind.sh: item_string_array_owned_setconst$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 item_string_array_owned_setconst >item_string_array_owned_setconst-valgrind.sh
	$(AM_V_at)chmod 755 item_string_array_owned_setconst-valgrind.sh

object_siunit-valgrind.sh: object_siunit$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_siunit >object_siunit-valgrind.sh
	$(AM_V_at)chmod 755 object_siunit-valgrind.sh

object_dataline_const-valgrind.sh: object_dataline_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_dataline_const >object_dataline_const-valgrind.sh
	$(AM_V_at)chmod 755 object_dataline_const-valgrind.sh

object_dataline_copy-valgrind.sh: object_dataline_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_dataline_copy >object_dataline_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_dataline_copy-valgrind.sh

object_dataline_owned-valgrind.sh: object_dataline_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_dataline_owned >object_dataline_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_dataline_owned-valgrind.sh

object_dataline_sizecheck-valgrind.sh: object_dataline_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_dataline_sizecheck >object_dataline_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_dataline_sizecheck-valgrind.sh

object_datafield_const-valgrind.sh: object_datafield_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_datafield_const >object_datafield_const-valgrind.sh
	$(AM_V_at)chmod 755 object_datafield_const-valgrind.sh

object_datafield_copy-valgrind.sh: object_datafield_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_datafield_copy >object_datafield_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_datafield_copy-valgrind.sh

object_datafield_owned-valgrind.sh: object_datafield_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_datafield_owned >object_datafield_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_datafield_owned-valgrind.sh

object_datafield_sizecheck-valgrind.sh: object_datafield_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_datafield_sizecheck >object_datafield_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_datafield_sizecheck-valgrind.sh

object_brick_const-valgrind.sh: object_brick_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_brick_const >object_brick_const-valgrind.sh
	$(AM_V_at)chmod 755 object_brick_const-valgrind.sh

object_brick_copy-valgrind.sh: object_brick_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_brick_copy >object_brick_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_brick_copy-valgrind.sh

object_brick_owned-valgrind.sh: object_brick_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_brick_owned >object_brick_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_brick_owned-valgrind.sh

object_brick_sizecheck-valgrind.sh: object_brick_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_brick_sizecheck >object_brick_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_brick_sizecheck-valgrind.sh

object_surface_const-valgrind.sh: object_surface_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_surface_const >object_surface_const-valgrind.sh
	$(AM_V_at)chmod 755 object_surface_const-valgrind.sh

object_surface_copy-valgrind.sh: object_surface_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_surface_copy >object_surface_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_surface_copy-valgrind.sh

object_surface_owned-valgrind.sh: object_surface_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_surface_owned >object_surface_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_surface_owned-valgrind.sh

object_surface_sizecheck-valgrind.sh: object_surface_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_surface_sizecheck >object_surface_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_surface_sizecheck-valgrind.sh

object_lawn_const-valgrind.sh: object_lawn_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_lawn_const >object_lawn_const-valgrind.sh
	$(AM_V_at)chmod 755 object_lawn_const-valgrind.sh

object_lawn_copy-valgrind.sh: object_lawn_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_lawn_copy >object_lawn_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_lawn_copy-valgrind.sh

object_lawn_owned-valgrind.sh: object_lawn_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_lawn_owned >object_lawn_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_lawn_owned-valgrind.sh

object_lawn_nodata-valgrind.sh: object_lawn_nodata$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_lawn_nodata >object_lawn_nodata-valgrind.sh
	$(AM_V_at)chmod 755 object_lawn_nodata-valgrind.sh

object_lawn_sizecheck-valgrind.sh: object_lawn_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_lawn_sizecheck >object_lawn_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_lawn_sizecheck-valgrind.sh

object_lawn_curveprops-valgrind.sh: object_lawn_curveprops$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_lawn_curveprops >object_lawn_curveprops-valgrind.sh
	$(AM_V_at)chmod 755 object_lawn_curveprops-valgrind.sh

object_lawn_segments-valgrind.sh: object_lawn_segments$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_lawn_segments >object_lawn_segments-valgrind.sh
	$(AM_V_at)chmod 755 object_lawn_segments-valgrind.sh

object_selectionaxis_const-valgrind.sh: object_selectionaxis_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionaxis_const >object_selectionaxis_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionaxis_const-valgrind.sh

object_selectionaxis_copy-valgrind.sh: object_selectionaxis_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionaxis_copy >object_selectionaxis_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionaxis_copy-valgrind.sh

object_selectionaxis_owned-valgrind.sh: object_selectionaxis_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionaxis_owned >object_selectionaxis_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionaxis_owned-valgrind.sh

object_selectioncross_const-valgrind.sh: object_selectioncross_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectioncross_const >object_selectioncross_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectioncross_const-valgrind.sh

object_selectioncross_copy-valgrind.sh: object_selectioncross_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectioncross_copy >object_selectioncross_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectioncross_copy-valgrind.sh

object_selectioncross_owned-valgrind.sh: object_selectioncross_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectioncross_owned >object_selectioncross_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectioncross_owned-valgrind.sh

object_selectioncross_sizecheck-valgrind.sh: object_selectioncross_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectioncross_sizecheck >object_selectioncross_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectioncross_sizecheck-valgrind.sh

object_selectionellipse_const-valgrind.sh: object_selectionellipse_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionellipse_const >object_selectionellipse_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionellipse_const-valgrind.sh

object_selectionellipse_copy-valgrind.sh: object_selectionellipse_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionellipse_copy >object_selectionellipse_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionellipse_copy-valgrind.sh

object_selectionellipse_owned-valgrind.sh: object_selectionellipse_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionellipse_owned >object_selectionellipse_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionellipse_owned-valgrind.sh

object_selectionellipse_sizecheck-valgrind.sh: object_selectionellipse_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionellipse_sizecheck >object_selectionellipse_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionellipse_sizecheck-valgrind.sh

object_selectionlattice_const-valgrind.sh: object_selectionlattice_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionlattice_const >object_selectionlattice_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionlattice_const-valgrind.sh

object_selectionlattice_copy-valgrind.sh: object_selectionlattice_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionlattice_copy >object_selectionlattice_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionlattice_copy-valgrind.sh

object_selectionlattice_owned-valgrind.sh: object_selectionlattice_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionlattice_owned >object_selectionlattice_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionlattice_owned-valgrind.sh

object_selectionlattice_sizecheck-valgrind.sh: object_selectionlattice_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionlattice_sizecheck >object_selectionlattice_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionlattice_sizecheck-valgrind.sh

object_selectionline_const-valgrind.sh: object_selectionline_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionline_const >object_selectionline_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionline_const-valgrind.sh

object_selectionline_copy-valgrind.sh: object_selectionline_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionline_copy >object_selectionline_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionline_copy-valgrind.sh

object_selectionline_owned-valgrind.sh: object_selectionline_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionline_owned >object_selectionline_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionline_owned-valgrind.sh

object_selectionline_sizecheck-valgrind.sh: object_selectionline_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionline_sizecheck >object_selectionline_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionline_sizecheck-valgrind.sh

object_selectionpoint_const-valgrind.sh: object_selectionpoint_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpoint_const >object_selectionpoint_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpoint_const-valgrind.sh

object_selectionpoint_copy-valgrind.sh: object_selectionpoint_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpoint_copy >object_selectionpoint_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpoint_copy-valgrind.sh

object_selectionpoint_owned-valgrind.sh: object_selectionpoint_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpoint_owned >object_selectionpoint_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpoint_owned-valgrind.sh

object_selectionpoint_sizecheck-valgrind.sh: object_selectionpoint_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpoint_sizecheck >object_selectionpoint_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpoint_sizecheck-valgrind.sh

object_selectionpath_const-valgrind.sh: object_selectionpath_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpath_const >object_selectionpath_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpath_const-valgrind.sh

object_selectionpath_copy-valgrind.sh: object_selectionpath_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpath_copy >object_selectionpath_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpath_copy-valgrind.sh

object_selectionpath_owned-valgrind.sh: object_selectionpath_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpath_owned >object_selectionpath_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpath_owned-valgrind.sh

object_selectionpath_sizecheck-valgrind.sh: object_selectionpath_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionpath_sizecheck >object_selectionpath_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionpath_sizecheck-valgrind.sh

object_selectionprojective_const-valgrind.sh: object_selectionprojective_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionprojective_const >object_selectionprojective_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionprojective_const-valgrind.sh

object_selectionprojective_copy-valgrind.sh: object_selectionprojective_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionprojective_copy >object_selectionprojective_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionprojective_copy-valgrind.sh

object_selectionprojective_owned-valgrind.sh: object_selectionprojective_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionprojective_owned >object_selectionprojective_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionprojective_owned-valgrind.sh

object_selectionprojective_sizecheck-valgrind.sh: object_selectionprojective_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionprojective_sizecheck >object_selectionprojective_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionprojective_sizecheck-valgrind.sh

object_selectionrectangle_const-valgrind.sh: object_selectionrectangle_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionrectangle_const >object_selectionrectangle_const-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionrectangle_const-valgrind.sh

object_selectionrectangle_copy-valgrind.sh: object_selectionrectangle_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionrectangle_copy >object_selectionrectangle_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionrectangle_copy-valgrind.sh

object_selectionrectangle_owned-valgrind.sh: object_selectionrectangle_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionrectangle_owned >object_selectionrectangle_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionrectangle_owned-valgrind.sh

object_selectionrectangle_sizecheck-valgrind.sh: object_selectionrectangle_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_selectionrectangle_sizecheck >object_selectionrectangle_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_selectionrectangle_sizecheck-valgrind.sh

object_graphcurvemodel_const-valgrind.sh: object_graphcurvemodel_const$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_graphcurvemodel_const >object_graphcurvemodel_const-valgrind.sh
	$(AM_V_at)chmod 755 object_graphcurvemodel_const-valgrind.sh

object_graphcurvemodel_copy-valgrind.sh: object_graphcurvemodel_copy$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_graphcurvemodel_copy >object_graphcurvemodel_copy-valgrind.sh
	$(AM_V_at)chmod 755 object_graphcurvemodel_copy-valgrind.sh

object_graphcurvemodel_owned-valgrind.sh: object_graphcurvemodel_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_graphcurvemodel_owned >object_graphcurvemodel_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_graphcurvemodel_owned-valgrind.sh

object_graphcurvemodel_sizecheck-valgrind.sh: object_graphcurvemodel_sizecheck$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_graphcurvemodel_sizecheck >object_graphcurvemodel_sizecheck-valgrind.sh
	$(AM_V_at)chmod 755 object_graphcurvemodel_sizecheck-valgrind.sh

object_graphmodel_curves-valgrind.sh: object_graphmodel_curves$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_graphmodel_curves >object_graphmodel_curves-valgrind.sh
	$(AM_V_at)chmod 755 object_graphmodel_curves-valgrind.sh

object_graphmodel_nocurves-valgrind.sh: object_graphmodel_nocurves$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_graphmodel_nocurves >object_graphmodel_nocurves-valgrind.sh
	$(AM_V_at)chmod 755 object_graphmodel_nocurves-valgrind.sh

object_extract-valgrind.sh: object_extract$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_extract >object_extract-valgrind.sh
	$(AM_V_at)chmod 755 object_extract-valgrind.sh

object_nth-valgrind.sh: object_nth$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_nth >object_nth-valgrind.sh
	$(AM_V_at)chmod 755 object_nth-valgrind.sh

object_foreach-valgrind.sh: object_foreach$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_foreach >object_foreach-valgrind.sh
	$(AM_V_at)chmod 755 object_foreach-valgrind.sh

object_get_item_missing-valgrind.sh: object_get_item_missing$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_get_item_missing >object_get_item_missing-valgrind.sh
	$(AM_V_at)chmod 755 object_get_item_missing-valgrind.sh

file_basic_types-valgrind.sh: file_basic_types$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_basic_types >file_basic_types-valgrind.sh
	$(AM_V_at)chmod 755 file_basic_types-valgrind.sh

file_error_magic-valgrind.sh: file_error_magic$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_magic >file_error_magic-valgrind.sh
	$(AM_V_at)chmod 755 file_error_magic-valgrind.sh

file_error_itemtype-valgrind.sh: file_error_itemtype$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_itemtype >file_error_itemtype-valgrind.sh
	$(AM_V_at)chmod 755 file_error_itemtype-valgrind.sh

file_error_confinement_object-valgrind.sh: file_error_confinement_object$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_confinement_object >file_error_confinement_object-valgrind.sh
	$(AM_V_at)chmod 755 file_error_confinement_object-valgrind.sh

file_error_confinement_name1-valgrind.sh: file_error_confinement_name1$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_confinement_name1 >file_error_confinement_name1-valgrind.sh
	$(AM_V_at)chmod 755 file_error_confinement_name1-valgrind.sh

file_error_confinement_name2-valgrind.sh: file_error_confinement_name2$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_confinement_name2 >file_error_confinement_name2-valgrind.sh
	$(AM_V_at)chmod 755 file_error_confinement_name2-valgrind.sh

file_error_confinement_array1-valgrind.sh: file_error_confinement_array1$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_confinement_array1 >file_error_confinement_array1-valgrind.sh
	$(AM_V_at)chmod 755 file_error_confinement_array1-valgrind.sh

file_error_arraysize-valgrind.sh: file_error_arraysize$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_arraysize >file_error_arraysize-valgrind.sh
	$(AM_V_at)chmod 755 file_error_arraysize-valgrind.sh

file_error_duplicatename-valgrind.sh: file_error_duplicatename$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_duplicatename >file_error_duplicatename-valgrind.sh
	$(AM_V_at)chmod 755 file_error_duplicatename-valgrind.sh

file_error_toodeepnesting-valgrind.sh: file_error_toodeepnesting$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_toodeepnesting >file_error_toodeepnesting-valgrind.sh
	$(AM_V_at)chmod 755 file_error_toodeepnesting-valgrind.sh

file_error_truncated_object-valgrind.sh: file_error_truncated_object$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 file_error_truncated_object >file_error_truncated_object-valgrind.sh
	$(AM_V_at)chmod 755 file_error_truncated_object-valgrind.sh

membuf_item_bool-valgrind.sh: membuf_item_bool$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_bool >membuf_item_bool-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_bool-valgrind.sh

membuf_item_char-valgrind.sh: membuf_item_char$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_char >membuf_item_char-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_char-valgrind.sh

membuf_item_int32-valgrind.sh: membuf_item_int32$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int32 >membuf_item_int32-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int32-valgrind.sh

membuf_item_int64-valgrind.sh: membuf_item_int64$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int64 >membuf_item_int64-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int64-valgrind.sh

membuf_item_double-valgrind.sh: membuf_item_double$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_double >membuf_item_double-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_double-valgrind.sh

membuf_item_string-valgrind.sh: membuf_item_string$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_string >membuf_item_string-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_string-valgrind.sh

membuf_item_char_array-valgrind.sh: membuf_item_char_array$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_char_array >membuf_item_char_array-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_char_array-valgrind.sh

membuf_item_int32_array-valgrind.sh: membuf_item_int32_array$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int32_array >membuf_item_int32_array-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int32_array-valgrind.sh

membuf_item_int64_array-valgrind.sh: membuf_item_int64_array$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int64_array >membuf_item_int64_array-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int64_array-valgrind.sh

membuf_item_double_array-valgrind.sh: membuf_item_double_array$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_double_array >membuf_item_double_array-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_double_array-valgrind.sh

membuf_item_string_array-valgrind.sh: membuf_item_string_array$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_string_array >membuf_item_string_array-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_string_array-valgrind.sh

membuf_item_object-valgrind.sh: membuf_item_object$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_object >membuf_item_object-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_object-valgrind.sh

membuf_object-valgrind.sh: membuf_object$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_object >membuf_object-valgrind.sh
	$(AM_V_at)chmod 755 membuf_object-valgrind.sh

membuf_item_bool_read_too_short-valgrind.sh: membuf_item_bool_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_bool_read_too_short >membuf_item_bool_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_bool_read_too_short-valgrind.sh

membuf_item_char_read_too_short-valgrind.sh: membuf_item_char_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_char_read_too_short >membuf_item_char_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_char_read_too_short-valgrind.sh

membuf_item_int32_read_too_short-valgrind.sh: membuf_item_int32_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int32_read_too_short >membuf_item_int32_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int32_read_too_short-valgrind.sh

membuf_item_int64_read_too_short-valgrind.sh: membuf_item_int64_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int64_read_too_short >membuf_item_int64_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int64_read_too_short-valgrind.sh

membuf_item_double_read_too_short-valgrind.sh: membuf_item_double_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_double_read_too_short >membuf_item_double_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_double_read_too_short-valgrind.sh

membuf_item_string_read_too_short-valgrind.sh: membuf_item_string_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_string_read_too_short >membuf_item_string_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_string_read_too_short-valgrind.sh

membuf_item_int32_array_read_too_short-valgrind.sh: membuf_item_int32_array_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int32_array_read_too_short >membuf_item_int32_array_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int32_array_read_too_short-valgrind.sh

membuf_item_int64_array_read_too_short-valgrind.sh: membuf_item_int64_array_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_int64_array_read_too_short >membuf_item_int64_array_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_int64_array_read_too_short-valgrind.sh

membuf_item_double_array_read_too_short-valgrind.sh: membuf_item_double_array_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_double_array_read_too_short >membuf_item_double_array_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_double_array_read_too_short-valgrind.sh

membuf_item_string_array_read_too_short-valgrind.sh: membuf_item_string_array_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_item_string_array_read_too_short >membuf_item_string_array_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_item_string_array_read_too_short-valgrind.sh

membuf_object_read_too_short-valgrind.sh: membuf_object_read_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_object_read_too_short >membuf_object_read_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_object_read_too_short-valgrind.sh

membuf_object_write_too_short-valgrind.sh: membuf_object_write_too_short$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 membuf_object_write_too_short >membuf_object_write_too_short-valgrind.sh
	$(AM_V_at)chmod 755 membuf_object_write_too_short-valgrind.sh

object_copy_all-valgrind.sh: object_copy_all$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_copy_all >object_copy_all-valgrind.sh
	$(AM_V_at)chmod 755 object_copy_all-valgrind.sh

object_copy_none-valgrind.sh: object_copy_none$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_copy_none >object_copy_none-valgrind.sh
	$(AM_V_at)chmod 755 object_copy_none-valgrind.sh

object_copy_if_owned-valgrind.sh: object_copy_if_owned$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 object_copy_if_owned >object_copy_if_owned-valgrind.sh
	$(AM_V_at)chmod 755 object_copy_if_owned-valgrind.sh

check_utf8_name-valgrind.sh: check_utf8_name$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 check_utf8_name >check_utf8_name-valgrind.sh
	$(AM_V_at)chmod 755 check_utf8_name-valgrind.sh

check_utf8_type-valgrind.sh: check_utf8_type$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 check_utf8_type >check_utf8_type-valgrind.sh
	$(AM_V_at)chmod 755 check_utf8_type-valgrind.sh

check_utf8_string-valgrind.sh: check_utf8_string$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 check_utf8_string >check_utf8_string-valgrind.sh
	$(AM_V_at)chmod 755 check_utf8_string-valgrind.sh

check_double_nan-valgrind.sh: check_double_nan$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 check_double_nan >check_double_nan-valgrind.sh
	$(AM_V_at)chmod 755 check_double_nan-valgrind.sh

check_double_inf-valgrind.sh: check_double_inf$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 check_double_inf >check_double_inf-valgrind.sh
	$(AM_V_at)chmod 755 check_double_inf-valgrind.sh

check_empty_name-valgrind.sh: check_empty_name$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 check_empty_name >check_empty_name-valgrind.sh
	$(AM_V_at)chmod 755 check_empty_name-valgrind.sh

check_identifier_type-valgrind.sh: check_identifier_type$(EXEEXT)
	$(AM_V_at)echo $(LIBTOOL) --mode=execute $(VALGRIND) --quiet --leak-check=full --error-exitcode=1 check_identifier_type >check_identifier_type-valgrind.sh
	$(AM_V_at)chmod 755 check_identifier_type-valgrind.sh

# @@@ VALGRIND END @@@

valgrind_tests = item_string_const_const-valgrind.sh item_string_const_setcopy-valgrind.sh item_string_const_setowned-valgrind.sh item_string_copy_owned-valgrind.sh item_string_copy_take-valgrind.sh item_string_owned_owned-valgrind.sh item_string_owned_setconst-valgrind.sh item_char_array_const_const-valgrind.sh item_char_array_const_setcopy-valgrind.sh item_char_array_const_setowned-valgrind.sh item_char_array_copy_owned-valgrind.sh item_char_array_copy_take-valgrind.sh item_char_array_owned_owned-valgrind.sh item_char_array_owned_setconst-valgrind.sh item_int32_array_const_const-valgrind.sh item_int32_array_const_setcopy-valgrind.sh item_int32_array_const_setowned-valgrind.sh item_int32_array_copy_owned-valgrind.sh item_int32_array_copy_take-valgrind.sh item_int32_array_owned_owned-valgrind.sh item_int32_array_owned_setconst-valgrind.sh item_int64_array_const_const-valgrind.sh item_int64_array_const_setcopy-valgrind.sh item_int64_array_const_setowned-valgrind.sh item_int64_array_copy_owned-valgrind.sh item_int64_array_copy_take-valgrind.sh item_int64_array_owned_owned-valgrind.sh item_int64_array_owned_setconst-valgrind.sh item_double_array_const_const-valgrind.sh item_double_array_const_setcopy-valgrind.sh item_double_array_const_setowned-valgrind.sh item_double_array_copy_owned-valgrind.sh item_double_array_copy_take-valgrind.sh item_double_array_owned_owned-valgrind.sh item_double_array_owned_setconst-valgrind.sh item_string_array_const_const-valgrind.sh item_string_array_const_setcopy-valgrind.sh item_string_array_const_setowned-valgrind.sh item_string_array_copy_owned-valgrind.sh item_string_array_copy_take-valgrind.sh item_string_array_owned_owned-valgrind.sh item_string_array_owned_setconst-valgrind.sh object_siunit-valgrind.sh object_dataline_const-valgrind.sh object_dataline_copy-valgrind.sh object_dataline_owned-valgrind.sh object_dataline_sizecheck-valgrind.sh object_datafield_const-valgrind.sh object_datafield_copy-valgrind.sh object_datafield_owned-valgrind.sh object_datafield_sizecheck-valgrind.sh object_brick_const-valgrind.sh object_brick_copy-valgrind.sh object_brick_owned-valgrind.sh object_brick_sizecheck-valgrind.sh object_surface_const-valgrind.sh object_surface_copy-valgrind.sh object_surface_owned-valgrind.sh object_surface_sizecheck-valgrind.sh object_lawn_const-valgrind.sh object_lawn_copy-valgrind.sh object_lawn_owned-valgrind.sh object_lawn_nodata-valgrind.sh object_lawn_sizecheck-valgrind.sh object_lawn_curveprops-valgrind.sh object_lawn_segments-valgrind.sh object_selectionaxis_const-valgrind.sh object_selectionaxis_copy-valgrind.sh object_selectionaxis_owned-valgrind.sh object_selectioncross_const-valgrind.sh object_selectioncross_copy-valgrind.sh object_selectioncross_owned-valgrind.sh object_selectioncross_sizecheck-valgrind.sh object_selectionellipse_const-valgrind.sh object_selectionellipse_copy-valgrind.sh object_selectionellipse_owned-valgrind.sh object_selectionellipse_sizecheck-valgrind.sh object_selectionlattice_const-valgrind.sh object_selectionlattice_copy-valgrind.sh object_selectionlattice_owned-valgrind.sh object_selectionlattice_sizecheck-valgrind.sh object_selectionline_const-valgrind.sh object_selectionline_copy-valgrind.sh object_selectionline_owned-valgrind.sh object_selectionline_sizecheck-valgrind.sh object_selectionpoint_const-valgrind.sh object_selectionpoint_copy-valgrind.sh object_selectionpoint_owned-valgrind.sh object_selectionpoint_sizecheck-valgrind.sh object_selectionpath_const-valgrind.sh object_selectionpath_copy-valgrind.sh object_selectionpath_owned-valgrind.sh object_selectionpath_sizecheck-valgrind.sh object_selectionprojective_const-valgrind.sh object_selectionprojective_copy-valgrind.sh object_selectionprojective_owned-valgrind.sh object_selectionprojective_sizecheck-valgrind.sh object_selectionrectangle_const-valgrind.sh object_selectionrectangle_copy-valgrind.sh object_selectionrectangle_owned-valgrind.sh object_selectionrectangle_sizecheck-valgrind.sh object_graphcurvemodel_const-valgrind.sh object_graphcurvemodel_copy-valgrind.sh object_graphcurvemodel_owned-valgrind.sh object_graphcurvemodel_sizecheck-valgrind.sh object_graphmodel_curves-valgrind.sh object_graphmodel_nocurves-valgrind.sh object_extract-valgrind.sh object_nth-valgrind.sh object_foreach-valgrind.sh object_get_item_missing-valgrind.sh file_basic_types-valgrind.sh file_error_magic-valgrind.sh file_error_itemtype-valgrind.sh file_error_confinement_object-valgrind.sh file_error_confinement_name1-valgrind.sh file_error_confinement_name2-valgrind.sh file_error_confinement_array1-valgrind.sh file_error_arraysize-valgrind.sh file_error_duplicatename-valgrind.sh file_error_toodeepnesting-valgrind.sh file_error_truncated_object-valgrind.sh membuf_item_bool-valgrind.sh membuf_item_char-valgrind.sh membuf_item_int32-valgrind.sh membuf_item_int64-valgrind.sh membuf_item_double-valgrind.sh membuf_item_string-valgrind.sh membuf_item_char_array-valgrind.sh membuf_item_int32_array-valgrind.sh membuf_item_int64_array-valgrind.sh membuf_item_double_array-valgrind.sh membuf_item_string_array-valgrind.sh membuf_item_object-valgrind.sh membuf_object-valgrind.sh membuf_item_bool_read_too_short-valgrind.sh membuf_item_char_read_too_short-valgrind.sh membuf_item_int32_read_too_short-valgrind.sh membuf_item_int64_read_too_short-valgrind.sh membuf_item_double_read_too_short-valgrind.sh membuf_item_string_read_too_short-valgrind.sh membuf_item_int32_array_read_too_short-valgrind.sh membuf_item_int64_array_read_too_short-valgrind.sh membuf_item_double_array_read_too_short-valgrind.sh membuf_item_string_array_read_too_short-valgrind.sh membuf_object_read_too_short-valgrind.sh membuf_object_write_too_short-valgrind.sh object_copy_all-valgrind.sh object_copy_none-valgrind.sh object_copy_if_owned-valgrind.sh check_utf8_name-valgrind.sh check_utf8_type-valgrind.sh check_utf8_string-valgrind.sh check_double_nan-valgrind.sh check_double_inf-valgrind.sh check_empty_name-valgrind.sh check_identifier_type-valgrind.sh
endif

clean-local:
	rm -f *.gwy
